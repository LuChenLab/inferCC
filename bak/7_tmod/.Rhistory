library(tmod)
library(openxlsx)
library(gplots)
library(dplyr)
library(doMC)
install.packages("doMC")
library(doMC)
files = list.files(path = "/Volumes/WD/CloudStation/lung_cancer_10X/讨论/2019.05.10", pattern = "annotation_results_by_stage.xlsx", recursive = T, full.names = T)
files
sel <- msig$MODULES$Category %in% c("H", "C2", "C5")
msig <- tmodImportMSigDB("/Volumes/WD/CloudStation/lung_cancer_10X/讨论/2019.06.14/tagcloud/msigdb_v6.2.xml")
sel <- msig$MODULES$Category %in% c("H", "C2", "C5")
make_tmod_on_xlsx <- function(path, mode = "U") {
markers = read.xlsx(path, rowNames = T)
temp = markers # %>% filter(p_val_adj < 0.05) # %>% group_by(ident) %>% top_n(50, w = avg_logFC)
res = NULL
for (i in unique(temp$ident)) {
temp_res = temp[temp$ident == i, ]
temp_res = temp_res[order(temp_res$avg_logFC, decreasing = T), ]
if (mode == "U") {
temp_res = tmodUtest(
temp_res$gene,
mset = msig[sel],
qval=0.05
)
} else if (mode == "Z") {
temp_res = tmodZtest(
temp_res$gene,
mset = msig[sel],
qval=0.05
)
} else {
temp_res = tmodCERNOtest(
temp_res$gene,
mset = msig[sel],
qval=0.05
)
}
if (!is.null(temp_res) && nrow(temp_res) > 0) {
temp_res$ident = i
res = rbind(res, temp_res)
}
}
res = res[res$N1 > 0, ]
return(res)
}
registerDoMC(1)
resZ = foreach(i = files, .combine=rbind) %dopar% {
print(i)
temp_res = make_tmod_on_xlsx(i, mode = "Z")
if (!is.null(temp_res) && nrow(temp_res) > 0) {
temp_res$cell = basename(dirname(i))
} else {
temp_res = NULL
}
temp_res
}
resU = foreach(i = files, .combine=rbind) %dopar% {
print(i)
temp_res = make_tmod_on_xlsx(i, mode = "U")
if (!is.null(temp_res) && nrow(temp_res) > 0) {
temp_res$cell = basename(dirname(i))
} else {
temp_res = NULL
}
temp_res
}
resCERNO = foreach(i = files, .combine=rbind) %dopar% {
print(i)
temp_res = make_tmod_on_xlsx(i, mode = "C")
if (!is.null(temp_res) && nrow(temp_res) > 0) {
temp_res$cell = basename(dirname(i))
} else {
temp_res = NULL
}
temp_res
}
image_dir = "/Volumes/WD/CloudStation/lung_cancer_10X/讨论/2019.06.14/tagcloud/dotplot"
dir.create(image_dir, showWarnings = F, recursive = T)
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
tempC = resCERNO[resCERNO$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
tryCatch({
png(paste(image_dir, paste0(cell, ".png"), sep = "/"), width = 24, height = 16, units = "in", res = 600)
tmodPanelPlot(resAll, pval.thr = 0.05, pval.thr.lower = -Inf )
dev.off()
}, error = function(e){})
}
image_dir = "/Volumes/WD/CloudStation/lung_cancer_10X/讨论/2019.06.14/tagcloud/dotplot"
dir.create(image_dir, showWarnings = F, recursive = T)
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
tempC = resCERNO[resCERNO$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
tryCatch({
png(paste(image_dir, paste0(cell, ".png"), sep = "/"), width = 24, height = 24, units = "in", res = 600)
tmodPanelPlot(resAll, pval.thr = 0.05, pval.thr.lower = -Inf )
dev.off()
}, error = function(e){})
}
library(stringr)
?grep
knitr::opts_chunk$set(echo = TRUE)
library(tmod)
library(openxlsx)
library(gplots)
library(dplyr)
library(doMC)
library(stringr)
image_dir = "/Volumes/WD/CloudStation/lung_cancer_10X/讨论/2019.06.14/tagcloud/dotplot"
dir.create(image_dir, showWarnings = F, recursive = T)
make_dotplot <- function(resC, resU, resZ, cell, label=NULL) {
tempC = resC[resC$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
if(!is.null(label)) {
tempC = tempC[str_detect(tempC$Title, label), ]
tempU = tempU[str_detect(tempU$Title, label), ]
tempZ = tempZ[str_detect(tempZ$Title, label), ]
}
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
tryCatch({
tmodPanelPlot(resAll, pval.thr = 0.05, pval.thr.lower = -Inf )
}, error = function(e){})
}
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
png(paste(image_dir, paste0(cell, "_Go.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go")
dev.off()
png(paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark")
dev.off()
png(paste(image_dir, paste0(cell, "_Other.png"), sep = "/"), width = 24, height = 24, units = "in", res = 600)
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]")
dev.off()
}
tmodSummary(resAll)
dim(tmodSummary(resAll))
image_dir = "/Volumes/WD/CloudStation/lung_cancer_10X/讨论/2019.06.14/tagcloud/dotplot"
dir.create(image_dir, showWarnings = F, recursive = T)
make_dotplot <- function(resC, resU, resZ, cell, label=NULL) {
tempC = resC[resC$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
if(!is.null(label)) {
tempC = tempC[str_detect(tempC$Title, label), ]
tempU = tempU[str_detect(tempU$Title, label), ]
tempZ = tempZ[str_detect(tempZ$Title, label), ]
}
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
tryCatch({
tmodPanelPlot(resAll, pval.thr = 0.05, pval.thr.lower = -Inf )
}, error = function(e){})
}
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
png(paste(image_dir, paste0(cell, "_Go.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go")
dev.off()
png(paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark")
dev.off()
png(paste(image_dir, paste0(cell, "_Other.png"), sep = "/"), width = 24, height = 24, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]")
dev.off()
}
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
png(paste(image_dir, paste0(cell, "_Go.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go", pval.thr = 0.01)
dev.off()
png(paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"), width = 12, height = 12, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark", pval.thr = 0.05)
dev.off()
png(paste(image_dir, paste0(cell, "_Other.png"), sep = "/"), width = 12, height = 24, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]", pval.thr = 0.05)
dev.off()
}
make_dotplot <- function(resC, resU, resZ, cell, label=NULL, pval.thr = 0.01) {
tempC = resC[resC$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
if(!is.null(label)) {
tempC = tempC[str_detect(tempC$Title, label), ]
tempU = tempU[str_detect(tempU$Title, label), ]
tempZ = tempZ[str_detect(tempZ$Title, label), ]
}
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
tryCatch({
tmodPanelPlot(resAll, pval.thr = pval.thr, pval.thr.lower = -Inf )
}, error = function(e){})
}
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
png(paste(image_dir, paste0(cell, "_Go.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go", pval.thr = 0.01)
dev.off()
png(paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"), width = 12, height = 12, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark", pval.thr = 0.05)
dev.off()
png(paste(image_dir, paste0(cell, "_Other.png"), sep = "/"), width = 12, height = 24, units = "in", res = 600)
plot.new()
make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]", pval.thr = 0.05)
dev.off()
}
?tmodSummary
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
print(cell)
# png(paste(image_dir, paste0(cell, "_Go.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
# plot.new()
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go", pval.thr = 0.01)
print(dim(tmodSummary(resAll)))
#  tryCatch({
#     tmodPanelPlot(resAll, pval.thr = pval.thr, pval.thr.lower = -Inf )
# }, error = function(e){})
# dev.off()
# png(paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"), width = 12, height = 12, units = "in", res = 600)
# plot.new()
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark", pval.thr = 0.05)
print(dim(tmodSummary(resAll)))
# dev.off()
# png(paste(image_dir, paste0(cell, "_Other.png"), sep = "/"), width = 12, height = 12, units = "in", res = 600)
# plot.new()
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]", pval.thr = 0.05)
print(dim(tmodSummary(resAll)))
# dev.off()
}
make_dotplot <- function(resC, resU, resZ, cell, label=NULL, pval.thr = 0.01) {
tempC = resC[resC$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
if(!is.null(label)) {
tempC = tempC[str_detect(tempC$Title, label), ]
tempU = tempU[str_detect(tempU$Title, label), ]
tempZ = tempZ[str_detect(tempZ$Title, label), ]
}
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
return(resAll)
}
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
print(cell)
# png(paste(image_dir, paste0(cell, "_Go.png"), sep = "/"), width = 24, height = 12, units = "in", res = 600)
# plot.new()
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go", pval.thr = 0.01)
print(dim(tmodSummary(resAll)))
#  tryCatch({
#     tmodPanelPlot(resAll, pval.thr = pval.thr, pval.thr.lower = -Inf )
# }, error = function(e){})
# dev.off()
# png(paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"), width = 12, height = 12, units = "in", res = 600)
# plot.new()
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark", pval.thr = 0.05)
print(dim(tmodSummary(resAll)))
# dev.off()
# png(paste(image_dir, paste0(cell, "_Other.png"), sep = "/"), width = 12, height = 12, units = "in", res = 600)
# plot.new()
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]", pval.thr = 0.05)
print(dim(tmodSummary(resAll)))
# dev.off()
}
make_dotplot <- function(resC, resU, resZ, cell, label=NULL, pval.thr = 0.01) {
tempC = resC[resC$cell == cell, ]
tempU = resU[resU$cell == cell, ]
tempZ = resZ[resZ$cell == cell, ]
if(!is.null(label)) {
tempC = tempC[str_detect(tempC$Title, label), ]
tempU = tempU[str_detect(tempU$Title, label), ]
tempZ = tempZ[str_detect(tempZ$Title, label), ]
}
stages = unique(c(tempC$ident, tempU$ident, tempZ$ident))
resAll = list()
for(i in sort(stages)) {
resAll[[paste("CERNO", cell, i, sep = " - ")]] = tempC[tempC$ident == i, ]
resAll[[paste("Utest", cell, i, sep = " - ")]] = tempU[tempU$ident == i, ]
resAll[[paste("Ztest", cell, i, sep = " - ")]] = tempZ[tempZ$ident == i, ]
}
# tempC$Title = paste(tempC$Title, tempC$cell, tempC$ident, sep = " - ")
# tempU$Title = paste(tempU$Title, tempU$cell, tempU$ident, sep = " - ")
# tempZ$Title = paste(tempZ$Title, tempZ$cell, tempZ$ident, sep = " - ")
# resAll <- list(paste(CERNO, cell, )=tempC, U=tempU, Z=tempZ)
return(resAll)
}
for (cell in intersect(intersect(resCERNO$cell, resU$cell), resZ$cell)) {
print(cell)
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Go", pval.thr = 0.01)
tryCatch({
png(
paste(image_dir, paste0(cell, "_Go.png"), sep = "/"),
width = 24,
height = nrow(tmodSummary(resAll)) / 4,
units = "in",
res = 600
)
plot.new()
tmodPanelPlot(resAll, pval.thr = 0.01, pval.thr.lower = -Inf )
dev.off()
}, error = function(e){})
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^Hallmark", pval.thr = 0.05)
tryCatch({
png(
paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"),
width = 12,
height = nrow(tmodSummary(resAll)) / 4,
units = "in",
res = 600
)
plot.new()
tmodPanelPlot(resAll, pval.thr = 0.05, pval.thr.lower = -Inf )
dev.off()
}, error = function(e){})
resAll = make_dotplot(resC = resCERNO, resU = resU, resZ = resZ, cell = cell, label = "^[^(Go|Hallmark)]", pval.thr = 0.05)
tryCatch({
png(
paste(image_dir, paste0(cell, "_Hallmark.png"), sep = "/"),
width = 12,
height = nrow(tmodSummary(resAll)) / 4,
units = "in",
res = 600
)
plot.new()
tmodPanelPlot(resAll, pval.thr = 0.01, pval.thr.lower = -Inf )
dev.off()
}, error = function(e){})
}
