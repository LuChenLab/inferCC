library("reshape2")
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
rm(temp1)
rm(temp2)
View(raw_quality)
ggplot(raw_quality, aes(x=Patient, y=value, fill=type)) + geom_bar()
ggplot(raw_quality, aes(x=Patient, y=value, fill=type)) + geom_bar(stat = "identity")
ggplot(raw_quality, aes(x=Patient, y=value, fill=type)) + geom_bar(stat = "identity", position = position_dodge())
raw_quality,
ggplot(
raw_quality,
aes(x=reorder(Patient, -value), y=log10(value), fill=type)
) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(raw_quality, aes(x = reorder(Patient, -log10(value)), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
??reorder
ggplot(raw_quality, aes(x = reorder(Patient, value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
typeof(raw_quality$value)
raw_quality$value <- as.numeric(raw_quality$value)
ggplot(raw_quality, aes(x = reorder(Patient, value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme()
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.02.20")
library("ggplot2")
library("openxlsx")
library("reshape2")
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
View(temp1)
View(temp2)
View(raw_quality)
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
rm(temp1)
rm(temp2)
raw_quality$value <- as.numeric(raw_quality$value)
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(raw_quality)
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
rm(temp1)
rm(temp2)
raw_quality$value <- as.numeric(raw_quality$value)
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
rm(temp1)
rm(temp2)
# raw_quality$value <- as.numeric(raw_quality$value)
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(raw_quality)
as.numeric(raw_quality$value)
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
rm(temp1)
rm(temp2)
raw_quality$value <- as.numeric(gsub(",", "", raw_quality$value))
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=log10(value), fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
raw_quality <- read.xlsx("2019.02.11-所有样本测序质量信息.xlsx")
raw_quality <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells", "Median.Genes.per.Cell")]
temp1 <- raw_quality[, c("PatientID", "Estimated.Number.of.Cells")]
temp1$type = "Estimated.Number.of.Cells"
temp2 <- raw_quality[, c("PatientID", "Median.Genes.per.Cell")]
temp2$type <- "Median.Genes.per.Cell"
colnames(temp1) <- c("Patient", "value", "type")
colnames(temp2) <- c("Patient", "value", "type")
raw_quality <- rbind(temp1, temp2)
rm(temp1)
rm(temp2)
raw_quality$value <- as.numeric(gsub(",", "", raw_quality$value))
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Patient ID", y = "")
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Patient ID", y = "") +
geom_hline(500)
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Patient ID", y = "") +
geom_hline(yintercept=500, linetype="dashed", color = "red")
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "Patient ID", y = "") +
geom_hline(yintercept=500, linetype="dashed", color = "grey")
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x = "Patient ID", y = "") +
geom_hline(yintercept=500, linetype="dashed", color = "grey")
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x = "Patient ID", y = "") +
geom_hline(yintercept=200, linetype="dashed", color = "grey")
install.pacakges("Seurat")
install.packages("Seurat")
ggplot(raw_quality, aes(x = reorder(Patient, -value), y=value, fill=type)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x = "Patient ID", y = "") +
geom_hline(yintercept=200, linetype="dashed", color = "grey")
knitr::opts_knit$set(root.dir = "/mnt/raid62/Lung_cancer_10x/seurat/")
knitr::opts_chunk$set(echo = TRUE)
cs <- read.table("raw_counts_int.colSums")
View(cs)
ggplot(cs, aes(x = V1, y = V2)) + geom_density()
ggplot(cs, aes(x = V1, y = V2)) + geom_violin()
ggplot(cs, aes(x = V1, y = V2)) + geom_boxplot()
ggplot(cs, aes(x = V2)) + geom_density()
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 1000, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 3.0, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 10, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
cs <- read.table("raw_counts_int.colSums")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 5, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = log10(1000), linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(colSums)") #  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
rs <- read.table("raw_counts_int.rowSums")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(rowSums)") #  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log(V2))) + geom_density() + labs(x = "log10(rowSums)")  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(rs, aes(x = log(V2))) + geom_density() + labs(x = "log10(rowSums)")  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
View(rs)
ggplot(rs, aes(x = V2)) + geom_density() + labs(x = "log10(rowSums)")  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(rs, aes(x = log10(V2 + 1))) + geom_density() + labs(x = "log10(rowSums)")  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log10(V2))) + geom_density() + labs(x = "log10(colSums)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log10(V2))) + geom_density() + labs(x = "log10(Expression of single cell)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(cs, aes(x = log10(V2))) + geom_density() + labs(x = "log10(Expression of cells)") + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
ggplot(rs, aes(x = log10(V2 + 1))) + geom_density() + labs(x = "log10(Expresison of genes across all cells)")  + geom_vline(xintercept = 3, linetype = "dashed", color = "grey")
library(ggplot2)
library(openxlsx)
data <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/gene_list.xlsx", sheet = 4)
View(data)
data <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/gene_list.xlsx", sheet = 5, colNames = F)
View(data)
ggplot(data, aes(x=X2, fill=X1)) + geom_bar()
library(dplyr)
data %>% group_by(X2)
data %>% group_by(X2) %>% count()
data %>% group_by(X2) %>% count() %>% select(n) %>% max()
data %>% group_by(X2) %>% count() %>% select(n)
counts <- data %>% group_by(X2) %>% count()
View(counts)
data <- merge(data, counts, by = "X2")
View(data)
data$n <- 1 / data$n
ggplot(data, aes(x=X2, y = n, fill=X1)) + geom_bar()
ggplot(data, aes(x=X2, y = n, fill=X1)) + geom_bar(stat = "identity")
ggplot(data, aes(x=X2, y = n, fill=X1)) + geom_bar(stat = "identity") + scale_x_continuous(breaks = unique(data$X2))
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),vjust=0)
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),vjust=0.5, hjust = 0.5)
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),vjust=0.5, hjust = 0.5, angle=90)
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),vjust=0.5, hjust = 1, angle=90)
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),vjust=0.5, hjust = 1, angle=90) +
theme(legend.position = "none")
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),vjust=1, hjust = 1, angle=90) +
theme(legend.position = "none")
ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1),position = position_stack(vjust = 0.5), angle=90) +
theme(legend.position = "none")
p <- ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1), position = position_stack(vjust = 0.5), angle=90) +
theme(legend.position = "none")
ggsave("/Users/zhangyiming/Downloads/lung_cancer_10X/cluster.png", plot = p, dpi = 300, width = 10, height = 10)
p <- ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1), position = position_stack(vjust = 0.5), angle=90) +
theme(legend.position = "none", axis.text.x = element_text(angle = 90))
p
ggsave("/Users/zhangyiming/Downloads/lung_cancer_10X/cluster.png", plot = p, dpi = 300, width = 10, height = 10)
data <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/gene_list.xlsx", sheet = 4, colNames = F)
counts <- data %>% group_by(X2) %>% count()
data <- merge(data, counts, by = "X2")
data$n <- 1 / data$n
p <- ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1), position = position_stack(vjust = 0.5), angle=90) +
theme(legend.position = "none", axis.text.x = element_text(angle = 90))
p
ggsave("/Users/zhangyiming/Downloads/lung_cancer_10X/cluster.png", plot = p, dpi = 300, width = 10, height = 10)
data <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/gene_list.xlsx", sheet = 4, colNames = F)
counts <- data %>% group_by(X2) %>% count()
data <- merge(data, counts, by = "X2")
data$n <- 1 / data$n
p <- ggplot(data, aes(x=X2, y = n, fill=X1)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = unique(data$X2)) +
geom_text(data=data,aes(x=X2,y=n,label=X1), position = position_stack(vjust = 0.5), angle=90) +
theme(legend.position = "none", axis.text.x = element_text(angle = 90))
p
t <- here("1", "2")
library(here)
t <- here("1", "2")
here("t", "3")
here(t, "3")
library(openxlsx)
wb = loadWorkbook("/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.03.22/患者信息.xlsx")
sheets(wb)
wb["Sheet1"]
ws1 <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.03.22/患者信息.xlsx")
head(ws1)
ws2 <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.03.22/患者信息.xlsx", 2)
head(ws2)
View(ws2)
View(ws1)
ws3 <- merge(ws1, ws2, by.x="X2", by.y = "姓名")
View(ws3)
ws3 <- merge(ws1, ws2, by.x="X2", by.y = "姓名", all=T)
write.xlsx(ws3, "/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.03.22/患者信息1.xlsx")
ws2 <- read.xlsx("/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.03.22/患者信息.xlsx", 2)
ws3 <- merge(ws1, ws2, by.x="X2", by.y = "姓名", all=T)
write.xlsx(ws3, "/Users/zhangyiming/Downloads/lung_cancer_10X/讨论/2019.03.22/患者信息1.xlsx")
log10(100)
log10(101)
10^2.004321
log10(0.1)
log10(1.1)
log2(358)
2^358
2^8.48
10^8.451211
8.451211 ^ 10
2^8.451211
library(Seurat)
library(reticulate)
test = 1:10
sum(c(1, 1, 1, 1) %in% test)
sum(c(1, 1, 1, 1, 10) %in% test)
?merge
??use_python()
tst = 1:10
tst[1:5]
sample(1:100, 10)
?legend
?scale
library(cowplot)
#create the breaks
bk2 = unique(c(seq(0, 0.98, length=9), 1, seq(1.01,3.5, length=10)))
#set different color vectors for each interval
col1 = colorRampPalette(c("gray87", 'gray32'))(9) #set the order of greys
col2 <- rep("white", 2)
col3 = colorRampPalette(c("gray31", "gray0"))(9)
colors2 <- c(col1, col2, col3)
colors2
breaks = sep(1, 100, 0.1)
breaks = seq(1, 100, 0.1)
colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(length(breaks))
?pheatmap
??pheatmap
?pheatmap
library(pheatmap)
?pheatmap
?str_subset
??str_subset
?gsub
?invisible
install.packages("ddpcr")
library(ddpcr)
?ggviolin
??ggviolin
install.packages("WCGNA")
install.packages("WGCNA")
install.packages("DCNA")
install.packages("DGCA")
install.packages("DINGO")
library(WGCNA)
BiocManager::install("GO.db")
BiocManager::install("nlme")
BiocManager::install("nlme")
install.packages("Rcapture")
library(WGCNA)
BiocManager::install("impute")
library(WGCNA)
BiocManager::install("nlme")
BiocManager::install("nlme")
data = data.frame(1:10, c(1,1,2,2,4,58,16,47,98))
data = data.frame(1:10, c(1,1,2,2,4,58,16,47,98, 15,12))
data = data.frame(1:10, c(1,1,2,2,4,58,16,47,98, 15))
View(data)
data = data.frame(c(1, 1, 2, 2,3 , 3, 4, 4, 5,5 ), c(1,1,2,2,4,58,16,47,98, 15))
library(dplyt)
library(dplyr)
colnames(data) <- c(1, 2)
data %>% top_n()
colnames(data) <- c(1, "n")
colnames(data) <- c(1, "n")
data %>% top_n()
data %>% top_n("N")
data %>% top_n("n")
data %>% top_n(1)
data %>%  group_by(1) %>% top_n(1)
data %>%  group_by("1") %>% top_n(1)
data %>%  group_by("1") %>% top_n(1)
colnames(data) <- c("m", "n")
data %>%  group_by(m) %>% top_n(1)
data %>%  group_by(m) %>% top_n(1) %>% unique()
data = list(1, 1, 2, 2, 3, 4)
data
unique(list)
unique(data)
sort(data)
data  = 1:10
which(data == 1)
which(data == 3)
which(data == 10)
data = list()
data = list(c(1, 3), c(1, 2), c(1, 5), c(2, 4))
data
sort(data)
list_names = names(data)
list_names = keys(data)
list_names = indx(data)
list_names = names(data)
data
View(data)
data = list(c(1, 3), c(1, 2), c(1, 5), c(2, 4), "t"=c(2, 3))
data
names(data)
elements = list(c(1, 3), c(1, 2), c(1, 5), c(2, 4), "t"=c(2, 3))
res = list()
for (i in elements) {
res[[i[1]]] <- c(res[[i[1]]], res[2])
}
res
res = list()
for (i in elements) {
res[[i[1]]] <- c()
}
for (i in elements) {
res[[i[1]]] <- c(res[[i[1]]], res[2])
}
View(res)
res = list()
for (i in elements) {
res[[i[1]]] <- c()
}
res
for (i in elements) {
res[[i[1]]] <- c(res[[i[1]]], i[2])
}
for (i in elements) {
print(i)
res[[i[1]]] <- c(res[[i[1]]], i[2])
}
for (i in elements) {
res[[i[1]]] <- c(i[2])
}
res
for (i in elements) {
print(i)
res[[i[1]]] <- unique(c(res[[i[1]]], i[2]))
}
res
temp = matrix(NA, nrow = 1, ncol=2)
for (i in elements) {
temp <- rbind(temp, i)
}
temp
temp = na.omit(temp)
rownames(temp) <- 1:nrow(temp)
order(temp[, 1])
View(temp)
temp$dist = temp[,2] - temp[,1]
temp = as.data.frame(temp)
temp$dist = temp[,2] - temp[,1]
View(temp)
temp = matrix(NA, nrow = 1, ncol=2)
res = list()
for (i in elements) {
temp <- rbind(temp, i)
}
temp = na.omit(temp)
rownames(temp) <- 1:nrow(temp)
temp = as.data.frame(temp)
temp$dist = temp[,2] - temp[,1]
temp
order(temp[.1])
order(temp[,1])
order(temp[,3])
rownames(temp) <- as.character(1:nrow(temp))
View(temp)
res = c()
for (i in sort(unique(temp[,1]))) {
temp_data = temp[temp[,1] == i, ]
res = c(res, rownames(temp_data)[order(temp_data[, 3])])
}
res
res = as.numeric(res)
gzipfile
gzfile
library(Seurat)
?DoHeatmap
?library
?SCTransform
??SCTransform
?zscore
??zscore
2^0
2^0.5
BiocManager::install("rtracklayer")
library(rtracklayer)
library(mosaic)
install.packages("mosaic")
library(mosaic)
?zscore
?hclust
?scale
setwd("Code/lung_cancer_10x/4_gene_signature/")
getwd()
